version: '3.8'

services:
  # GClaude Enterprise System 主服務
  gclaude-app:
    build:
      context: .
      target: production
      args:
        - NODE_ENV=production
    container_name: gclaude-enterprise-system
    restart: unless-stopped
    
    environment:
      - NODE_ENV=production
      - PORT=3007
      - JWT_SECRET=${JWT_SECRET:-gclaude-default-secret-change-in-production}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_GROUP_ID=${TELEGRAM_GROUP_ID}
      - LOG_LEVEL=info
      - GCLAUDE_COMPATIBLE=true
      - GCLAUDE_MONITORING=true
      
    ports:
      - "3007:3007"
      
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads  
      - ./database:/app/database
      - gclaude-data:/app/data
      
    networks:
      - gclaude-network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # Redis (可選 - 用於 Session 存儲和快取)
  redis:
    image: redis:7-alpine
    container_name: gclaude-redis
    restart: unless-stopped
    
    ports:
      - "6379:6379"
      
    volumes:
      - redis-data:/data
      
    networks:
      - gclaude-network
      
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理 (可選)
  nginx:
    image: nginx:alpine
    container_name: gclaude-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
      
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      
    networks:
      - gclaude-network
      
    depends_on:
      - gclaude-app
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 網路配置
networks:
  gclaude-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

# 數據卷配置  
volumes:
  gclaude-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
      
  redis-data:
    driver: local